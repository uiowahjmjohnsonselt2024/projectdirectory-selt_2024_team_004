<div class="container">
  <div class="top-banner">
    <h2 class="title">Pretty Pirates</h2>

    <div class="dropdown-menu-container">
      <button class="dropdown-button">Menu</button>
      <div class="dropdown-content">
        <a href="#">Settings</a>
        <a href="#">Store</a>
        <%= link_to 'Exit World', worlds_path, class:'btn btn-primary dropdown_link' %>
      </div>
    </div>
  </div>

  <div class="grid">
    <% (1..36).each do |i| %>
      <div class="grid-item" data-x="<%= (i % 6) %>" data-y="<%= (i / 6).floor %>">Tile <%= i %></div>
    <% end %>
    <div class="character" style="position: absolute; top: 0; left: 0;"><%= image_tag asset_path(@character.image_code), width: '100', height: 'auto'%></div>
  </div>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center; /* Center horizontally */
        justify-content: center; /* Center vertically */
        height: 100vh;
    }

    .container {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
    }

    .top-banner {
        background: linear-gradient(135deg, #007bff, #0056b3);
        width: 100%;
        height: 11%;
        padding: 1rem 0;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        transition: background 0.3s ease-in-out;
        flex-direction: row;
        justify-content: center;
        text-align: center;
    }

    .title {
        font-size: 3rem;
        color: #ffffff;
    }

    .dropdown-menu-container {
        position: absolute;
        top: 4%;
        right: 2%;
    }

    .dropdown-button {
        background-color: #007bff;
        color: #ffffff;
        padding: 20px 25px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1.5rem;
    }

    .dropdown-content {
        display: none;
        position: relative;
        right: 0;
        background-color: #ffffff;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        z-index: 1000; /* Ensures this is above other content */
        border-radius: 5px;
        overflow: hidden;
    }

    .dropdown-content a {
        display: block;
        padding: 10px 15px;
        text-decoration: none;
        color: #000000;
        font-size: 0.9rem;
    }

    .dropdown-content a:hover {
        background-color: #f0f0f0;
    }

    .dropdown-menu-container:hover .dropdown-content {
        display: block;
     }

    .grid {
        display: grid;
        grid-template-columns: repeat(6, 1fr); /* 3 columns */
        gap: 5px; /* Space between grid items */
        justify-items: center; /* Center grid items horizontally */
        align-items: center; /* Center grid items vertically */
        height: 89%;
        width: 100%;
    }

    .grid-item {
        width: 14vw;
        aspect-ratio: 5 / 2;
        background-color: #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        const gridItems = document.querySelectorAll('.grid-item');

        gridItems.forEach(item => {
            item.addEventListener('click', function() {
                const targetX = parseInt(this.getAttribute('data-x'));
                const targetY = parseInt(this.getAttribute('data-y'));

                // Send the target coordinates to the Rails backend
                fetch('/update_position', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector("meta[name='csrf-token']").content
                    },
                    body: JSON.stringify({ x: targetX, y: targetY })
                })
                  .then(response => response.json())
                  .then(data => {
                      // Handle the new player position (update the view)
                      moveCharacterTo(data.x, data.y);
                  });
            });
        });

        function moveCharacterTo(x, y) {
            const characterElement = document.querySelector('.character');
            // Assuming grid items are 60px by 60px, adjust accordingly
            const gridSize = 60; // adjust this if needed
            characterElement.style.transform = `translate(${x * gridSize}px, ${y * gridSize}px)`;
        }
    });
</script>