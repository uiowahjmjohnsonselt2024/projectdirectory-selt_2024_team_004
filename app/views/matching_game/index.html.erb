<div class="container">
  <!-- Put a banner at the top of the page with a title and dropdown menu allowing user to quit if they want -->
  <div class="top-banner">
    <h2 class="title">Matching Mateys!</h2>

    <!-- Dropdown Menu -->
    <!-- User clicking quit will redirect them back to their landing page -->
    <div class="dropdown-menu-container">
      <button class="dropdown-button">Menu</button>
      <div class="dropdown-content">
        <%= link_to 'Quit Minigame', landing_path, class: 'btn btn-primary dropdown_link' %>
      </div>
    </div>
  </div>
</div>

<!-- Put the timer on the screen and the start button so the user can click start and see time remaining to complete the game -->
<div class="timer-and-start">
  <!-- Timer Display -->
  <div class="timer">
    <span id="timer">01:00</span>
  </div>
  <!-- Start Button -->
  <div class="start-button">
    <button class="btn start-btn" id="start-btn">Set Sail!</button>
  </div>
</div>


<!-- Game over message, hidden until timer runs out (only if player has not won) -->
<div id="game-over-message" style="display: none;">
  <p>ARG!!! Yer game is over!</p>
</div>

<!-- Arrange the cards in 2 rows of 5 -->
<div class="cards-container">
  <div class="card-row">
    <% @shuffled_cards[0..4].each_with_index do |card_index, index| %>
      <div class="card disabled" data-card="<%= index %>">
        <img class="card-image" src="<%= asset_path('card_image' + (card_index + 1).to_s + '.png') %>" alt="Card Image" />
      </div>
    <% end %>
  </div>
  <div class="card-row">
    <% @shuffled_cards[5..9].each_with_index do |card_index, index| %>
      <div class="card disabled" data-card="<%= index + 5 %>">
        <img class="card-image" src="<%= asset_path('card_image' + (card_index + 1).to_s + '.png') %>" alt="Card Image" />
      </div>
    <% end %>
  </div>
</div>

<!-- Description of how to play the game at the bottom of the page -->
<div class="description-container">
  <p class="description">
    Ahoy matey! To set sail on this mini adventure, click cards to flip 'em over and uncover
    some of yer pirates favorite treasures! Ye can only flip two at a time, so choose wisely
    to make swashbucklin' matches! Continue yer quest 'til ye find all matching pairs, or ye
    run outta time! Click start to sail forth, and good fortune to ye matey!
  </p>
</div>

<script>
  // Add some JavaScript to be able to handle events, such as clicking start button
  // Initialize the timer to 1 minute (or 60 seconds)
  let timeLeft = 60;
  let countdownTimer;

  // Connect this timer to the timer in the view and the start button
  const timerDisplay = document.getElementById('timer')
  const startButton = document.getElementById('start-btn')

  // Connect game over message to its element in the view
  const gameOverMessage = document.getElementById('game-over-message')

  // Pass the shuffled cards to the JavaScript
  const shuffledCards = <%= raw @shuffled_cards.to_json %>;

  // Implement function to start timer when user clicks the start game button
  function startTimer() {
      countdownTimer = setInterval(function() {
          // First check if the timer has been going and has reached zero, if yes the game is over
          if (timeLeft <= 0) {
              clearInterval(countdownTimer);

              // Hide the timer and start button and show the game over message
              document.querySelector('.timer-and-start').style.display = 'none';
              gameOverMessage.style.display = 'block';
          }
          else {
              timeLeft--;
              const minutes = Math.floor(timeLeft / 60);
              const seconds = timeLeft % 60;
              timerDisplay.textContent = `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + seconds : seconds}`;
          }
      }, 1000);
  }

  // Add event listener to start button
  startButton.addEventListener('click', function() {
      // Disable start button so user cannot click again
      startButton.disabled = true;

      // Enable the cards so user can now flip them
      const cards = document.querySelectorAll('.card');
      cards.forEach(card => {
          card.classList.remove('disabled');
          card.addEventListener('click', flipCard);
      });

      // Start countdown
      startTimer();
  });

  function flipCard(event) {
      // Get the clicked card and its index
      const cardElement = event.currentTarget;
      const cardIdx = cardElement.dataset.card;

      // Prevent flipping if the card is already flipped
      if (cardElement.classList.contains('flipped')) return;

      // Send request to backend to flip the card
      fetch('/flip', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify({ index: cardIdx }),
      })
        .then(response => response.json())
        .then(data => {
            // Flip the card by adding the 'flipped' class
            cardElement.classList.add('flipped');

            // Get the image element inside the card
            const imgElement = cardElement.querySelector('.card-image');

            // Get the card value using the shuffledCards array
            const cardValue = shuffledCards[parseInt(cardIdx, 10)];

            // Set the src if it's not set yet (this is just a safeguard)
            if (!imgElement.src || imgElement.src.includes('card_image')) {
                imgElement.src = `/assets/card_image${cardValue + 1}.png`;
            }

            // Show the image by changing the display style
            imgElement.style.display = 'block';

            // Check if the game is over
            if (data.game_status) {
                alert('You won the game!');
            }
        })
        .catch(error => {
            console.error('Error flipping card:', error);
        });
  }
</script>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        height: 100vh;
        background-color: #f0f0f0;
    }

    .container {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        width: 100vw;
    }

    .top-banner {
        background: linear-gradient(135deg, #007bff, #0056b3);
        width: 100%;
        height: 15%;
        padding: 1rem 0;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .title {
        font-size: 3rem;
        color: #ffffff;
        margin: 0;
    }

    .dropdown-menu-container {
        position: absolute;
        top: 4%;
        right: 2%;
    }

    .dropdown-button {
        background-color: #007bff;
        color: #ffffff;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1.5rem;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        top: 100%;
        right: 0;
        background-color: #ffffff;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        border-radius: 5px;
    }

    .dropdown-content a {
        display: block;
        padding: 10px 15px;
        text-decoration: none;
        color: #000000;
        font-size: 0.9rem;
    }

    .dropdown-content a:hover {
        background-color: #f0f0f0;
    }

    .dropdown-menu-container:hover .dropdown-content {
        display: block;
    }

    .timer-and-start {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 20px;
        margin-top: 20px;
    }

    .timer {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff;
    }

    .start-btn {
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        font-size: 1.2rem;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .start-btn:hover {
        background-color: #0056b3;
    }

    .start-btn:disabled {
        background-color: #cccccc;
        cursor: not-allowed;
    }

    #game-over-message {
        font-size: 2rem;
        color: #ff0000;
        margin-top: 20px;
    }

    .cards-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        margin-top: 20px;
    }

    .card-row {
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    .card {
        width: 100px;
        height: 150px;
        background-color: #007bff;
        border-radius: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        cursor: pointer;
        transform: rotateY(0);
        transition: transform 0.3s ease-in-out;
        overflow: hidden;
    }

    .card img {
        width: 100%;
        height: auto;
        border-radius: 10px;
        object-fit: cover;
        display: none; /* Initially hidden */
    }

    .card.flipped img {
        display: block; /* Show the image when the card is flipped */
    }

    .card.disabled {
        pointer-events: none;
        opacity: 0.5;
    }

    .card.flipped {
        transform: rotateY(180deg);
        background-color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    }

    .description-container {
        width: 100%;
        position: absolute;
        bottom: 0;
        padding: 20px;
        background-color: #ffffff;
        box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
        font-size: 1.2rem;
        color: #333333;
    }

    .description {
        margin: 0;
    }
</style>
