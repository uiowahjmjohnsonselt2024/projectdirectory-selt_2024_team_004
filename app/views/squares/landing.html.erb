<div class="container">
  <div class="top-banner">
    <h2 class="title">Pretty Pirates</h2>

    <%= stylesheet_link_tag 'landing', media: 'all', 'data-turbo-track': 'reload', defer: true %>
    <%= javascript_include_tag 'landing', 'data-turbo-track': 'reload', defer: true %>

    <div class="dropdown-menu-container">
      <button class="dropdown-button">Menu</button>
      <div class="dropdown-content">
        <%= link_to 'Settings', settings_path(return_path: request.fullpath), class:'btn btn-primary dropdown_link' %>
        <a href="#" id="store-link">Store</a>
        <%= form_with url: coordinates_path, method: :post, local: true do |form| %>
          <%= form.hidden_field :id, value: @character&.id %>
          <%= form.hidden_field :x, value: '', id: 'x-coord' %>
          <%= form.hidden_field :y, value: '', id: 'y-coord' %>
          <%= form.submit 'Save World', class: 'btn btn-primary', id: 'save-world-button' %>
        <% end %>
        <%= link_to 'Exit World', worlds_path, class:'btn btn-primary dropdown_link' %>
      </div>
    </div>
  </div>

  <!-- Debug info -->
  <% if @squares.present? %>
  <% end %>

  <div class="grid">
    <% if @squares.present? %>
      <% 
        # Define active squares (starting from top-left corner)
        active_squares = [[0,0], [1,0], [0,1]]  # Modify these coordinates for different corner patterns
      %>
      <% @squares.each do |square| %>
        <div class="grid-item <%= active_squares.include?([square.x, square.y]) ? '' : 'inactive-square' %>" 
             id="square_<%= square.square_id %>"
             data-x="<%= square.x %>"
             data-y="<%= square.y %>">
          <% if square.code.present? %>
            <script>
              if (!window.squareInitialized_<%= square.square_id %>) {
                document.addEventListener('DOMContentLoaded', () => {
                  <%= square.code.html_safe %>
                  drawSquare_<%= square.x %>_<%= square.y %>('square_<%= square.square_id %>');
                  <% unless active_squares.include?([square.x, square.y]) %>
                    // Add grey overlay to inactive squares
                    const canvas = document.querySelector('#square_<%= square.square_id %> canvas');
                    if (canvas) {
                      const ctx = canvas.getContext('2d');
                      ctx.fillStyle = 'rgba(128, 128, 128, 0.7)';
                      ctx.fillRect(0, 0, canvas.width, canvas.height);
                    }
                  <% end %>
                });
                window.squareInitialized_<%= square.square_id %> = true;
              }
            </script>
          <% else %>
            <p>No code for (<%= square.x %>, <%= square.y %>)</p>
          <% end %>
        </div>
      <% end %>
      <div class="character"
           style="position: absolute; top: <%= @character&.y_coord %>px; left: <%= @character&.x_coord %>px;">
        <%= image_tag asset_path(@character&.image_code), width: '100', height: '100' if @character&.image_code %>
      </div>
    <% else %>
      <p>No squares found for this world!</p>
    <% end %>

    <div class="teleport-container">
      <button id="teleport-button" class="btn">Teleport</button>
    </div>
  </div>

  <!-- Store Modal -->
  <div id="store-modal" class="modal">
    <div class="modal-content">
      <div class="store-banner">
        <h2 class="store-title">Store</h2>
      </div>
      <span class="close-button">&times;</span>
      <div class="store-grid">
        <% @prices.each do |key, price| %>
          <% puts "Rendering item: #{key}, price: #{price}, currency: #{@currency}" %>
          <div class="store-grid-item">
            <button class="item-button" data-name="#{key.to_s.humanize" data-price="<%= price %> <%= @currency %>">
              <div class="item-content">
                <%= image_tag "shards/#{key}.png", alt: "#{key.to_s.humanize}", style: "width: 100%; height: auto; object-fit: cover; border-radius: 8px;" %>
                <p class="item-price"><%= key.to_s.humanize %>: <br><%= price %> <%= @currency %></p>
                <% if key.to_s == 'hat_of_shards_50' %>
                  <p class="discount">20% off!</p>
                <% elsif key.to_s == 'chest_of_shards_100' %>
                  <p class="discount">33% off!</p>
                <% end %>
              </div>
            </button>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Purchase Modal -->
  <div id="purchase-modal" class="modal">
    <div class="modal-content">
      <div class="store-banner">
        <h2 class="store-title">Purchase Item</h2>
      </div>
      <span class="close-button">&times;</span>
      <div class="purchase-form">
        <h3 id="item-name"></h3>
        <p id="item-price"></p>
        <form id="purchase-form">
          <label for="card-number">Card Number:</label>
          <input type="text" id="card-number" name="card-number" placeholder="XXXX XXXX XXXX XXXX" required>

          <label for="expiration-date">Expiration Date:</label>
          <input type="text" id="expiration-date" name="expiration-date" placeholder="MM/YY" required>

          <label for="cvv">CVV:</label>
          <input type="text" id="cvv" name="cvv" placeholder="XXX" required>

          <button type="submit" class="btn">Purchase</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const character = document.querySelector('.character');
        const xCoordField = document.querySelector('#x-coord');
        const yCoordField = document.querySelector('#y-coord');
        const saveWorldButton = document.querySelector('#save-world-button');

        let xCoord = <%= @character&.x_coord || 0 %>; // Initial X coordinate
        let yCoord = <%= @character&.y_coord || 0 %>; // Initial Y coordinate

        const playableWidth = (window.innerWidth * 0.39 - character.offsetWidth) - (window.innerHeight * 0.29);
        const playableHeight = (window.innerHeight * 0.58 - character.offsetHeight) - (window.innerHeight * 0.03);

        const xStep = playableWidth / 5;
        const yStep = playableHeight / 5;


        function moveCharacter() {
            character.style.left = (xCoord * 2) + 'px';
            character.style.top = (yCoord * 2) + 'px';
        }

        document.addEventListener('keydown', function (e) {
            if (e.key === 'ArrowUp') {
                yCoord = Math.max(window.innerHeight * 0.03, yCoord - yStep);
            } else if (e.key === 'ArrowDown') {
                yCoord = Math.min(window.innerHeight * 0.58 - character.offsetHeight, yCoord + yStep);
            } else if (e.key === 'ArrowLeft') {
                xCoord = Math.max(window.innerHeight * 0.29, xCoord - xStep);
            } else if (e.key === 'ArrowRight') {
                xCoord = Math.min(window.innerWidth * 0.39 - character.offsetWidth, xCoord + xStep);
            }

            moveCharacter();
        });

        saveWorldButton.addEventListener('click', function (e) {
            xCoordField.value = xCoord;
            yCoordField.value = yCoord;
        });

        moveCharacter();
    });
</script>

<%== @js_functions %>