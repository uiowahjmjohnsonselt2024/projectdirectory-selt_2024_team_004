<div class="container">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <div class="top-banner">
    <h2 class="title">Pretty Pirates</h2>

    <%= stylesheet_link_tag 'landing', media: 'all', 'data-turbo-track': 'reload', defer: true %>
    <%= javascript_include_tag 'landing', 'data-turbo-track': 'reload', defer: true %>

    <div class="dropdown-menu-container">
      <button class="dropdown-button">Menu</button>
      <div class="dropdown-content">
        <%= link_to 'Settings', settings_path(return_path: request.fullpath), class:'btn btn-primary dropdown_link' %>
        <a href="#" id="store-link">Store</a>
        <%= link_to 'Exit World', worlds_path, class:'btn btn-primary dropdown_link' %>
      </div>
    </div>
  </div>

  <!-- Debug info -->
  <% if @squares.present? %>
  <% end %>

  <div class="grid-teleport-container">
    <div class="grid">
      <% if @squares.present? %>
        <%
          # Define active squares (starting from top-left corner)
          active_squares = [[0,0], [1,0], [0,1]]  # Modify these coordinates for different corner patterns
        %>
        <% @squares.each do |square| %>
          <div class="grid-item <%= active_squares.include?([square.x, square.y]) ? '' : 'inactive-square' %>"
               id="square_<%= square.square_id %>"
               data-x="<%= square.x %>"
               data-y="<%= square.y %>">
            <% if square.code.present? %>
              <script>
                if (!window.squareInitialized_<%= square.square_id %>) {
                  document.addEventListener('DOMContentLoaded', () => {
                    <%= square.code.html_safe %>
                    drawSquare_<%= square.x %>_<%= square.y %>('square_<%= square.square_id %>');
                    <% unless active_squares.include?([square.x, square.y]) %>
                      // Add grey overlay to inactive squares
                      const canvas = document.querySelector('#square_<%= square.square_id %> canvas');
                      if (canvas) {
                        const ctx = canvas.getContext('2d');
                        ctx.fillStyle = 'rgba(128, 128, 128, 0.7)';
                        ctx.fillRect(0, 0, canvas.width, canvas.height);
                      }
                    <% end %>
                  });
                  window.squareInitialized_<%= square.square_id %> = true;
                }
              </script>
            <% else %>
              <p>No code for (<%= square.x %>, <%= square.y %>)</p>
            <% end %>
          </div>
        <% end %>
        <div class="character"
             style="position: absolute; top: <%= @character&.y_coord %>px; left: <%= @character&.x_coord %>px;">
          <%= image_tag asset_path(@character&.image_code), width: '100', height: '100' if @character&.image_code %>
        </div>
      <% else %>
        <p>No squares found for this world!</p>
      <% end %>
    </div>

    <div class="teleport-container" data-character-id="<%= @character.id %>">
      <%= form_with url: coordinates_path, method: :post, local: true do |form| %>
        <%= form.hidden_field :id, value: @character&.id %>
        <%= form.hidden_field :x, value: '', id: 'x-coord' %>
        <%= form.hidden_field :y, value: '', id: 'y-coord' %>
        <%= form.submit 'Save World', class: 'btn btn-primary', id:"teleport-button" %>
      <% end %>
      <p class="shards-count">Shards: <%= @character.shards || "Can't find shard count.y" %></p>
    </div>
  </div>

  <!-- Store Modal -->
  <div id="store-modal" class="modal">
    <div class="modal-content">
      <div class="store-banner">
        <h2 class="store-title">Store</h2>
      </div>
      <span class="close-button">&times;</span>
      <div class="store-grid">
        <% @prices.each do |key, price| %>
          <div class="store-grid-item">
            <button class="item-button" data-name="<%= key.to_s.humanize %>" data-price="<%= price %> <%= @currency %>">
              <div class="item-content">
                <%= image_tag "shards/#{key}.png", alt: "#{key.to_s.humanize}", style: "width: 100%; height: auto; object-fit: cover; border-radius: 8px;" %>
                <p class="item-price"><%= key.to_s.humanize %>: <br><%= price %> <%= @currency %></p>
                <% if key.to_s == 'hat_of_shards_50' %>
                  <p class="discount">20% off!</p>
                <% elsif key.to_s == 'chest_of_shards_100' %>
                  <p class="discount">33% off!</p>
                <% end %>
              </div>
            </button>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Purchase Modal -->
  <div id="purchase-modal" class="modal">
    <div class="modal-content">
      <div class="store-banner">
        <h2 class="store-title">Purchase Item</h2>
      </div>
      <span class="close-button">&times;</span>
      <div class="purchase-form">
        <h3 id="item-name"></h3>
        <p id="item-price"></p>
        <form id="purchase-form">
          <label for="card-number">Card Number:</label>
          <input type="text" id="card-number" name="card-number" placeholder="XXXX XXXX XXXX XXXX" required>

          <label for="expiration-date">Expiration Date:</label>
          <input type="text" id="expiration-date" name="expiration-date" placeholder="MM/YY" required>

          <label for="cvv">CVV:</label>
          <input type="text" id="cvv" name="cvv" placeholder="XXX" required>

          <button type="submit" class="btn">Purchase</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const character = document.querySelector('.character');
        const xCoordField = document.querySelector('#x-coord');
        const yCoordField = document.querySelector('#y-coord');
        const saveWorldButton = document.querySelector('#save-world-button');
        const gridItems = document.querySelectorAll('.grid-item');

        // Grid configuration
        const gridSize = 6; // 6x6 grid
        const tileSize = 105; // Each tile is 100px x 100px

        // Function to calculate grid offsets
        function calculateGridOffsets() {
            const gridWidth = gridSize * tileSize;
            const gridHeight = gridSize * tileSize;
            const screenWidth = window.innerWidth;
            const screenHeight = window.innerHeight;

            return {
                x: (screenWidth - gridWidth) / 2,
                y: (screenHeight - gridHeight) / 2
            };
        }

        // Function to move character to the correct tile
        function moveCharacterToTile(x, y) {
            const gridOffsets = calculateGridOffsets();

            // Adjust the position to account for the misalignment
            const characterX = gridOffsets.x + (x - 1) * tileSize + tileSize / 2 - 50; // Fix off-by-one issue
            const characterY = gridOffsets.y + y * tileSize + tileSize / 2 - 50;

            character.style.left = `${characterX}px`;
            character.style.top = `${characterY}px`;

            // Update hidden fields for form submission
            xCoordField.value = x;
            yCoordField.value = y;
        }

        // Center the character initially
        let xCoord = parseInt(<%= @character&.x_coord || 0 %>, 10); // Initial X coordinate
        let yCoord = parseInt(<%= @character&.y_coord || 0 %>, 10); // Initial Y coordinate
        moveCharacterToTile(xCoord, yCoord);

        // Add click event listeners to grid items
        gridItems.forEach((item) => {
            item.addEventListener('click', function () {
                const tileX = parseInt(this.getAttribute('data-x'), 10);
                const tileY = parseInt(this.getAttribute('data-y'), 10);

                xCoord = tileX;
                yCoord = tileY;

                moveCharacterToTile(tileX, tileY);

                // Visual feedback for selected tile
                gridItems.forEach((tile) => tile.classList.remove('selected-tile'));
                this.classList.add('selected-tile');
            });
        });

        // Save button updates hidden fields
        saveWorldButton.addEventListener('click', function () {
            xCoordField.value = xCoord;
            yCoordField.value = yCoord;
        });

        // Recalculate offsets and reposition character on window resize
        window.addEventListener('resize', () => {
            moveCharacterToTile(xCoord, yCoord);
        });
    });

</script>

<%== @js_functions %>